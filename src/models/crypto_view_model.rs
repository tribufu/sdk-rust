/*
 * Tribufu API
 *
 * REST API to access Tribufu services.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: contact@tribufu.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CryptoViewModel {
    #[serde(rename = "encoded", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub encoded: Option<Option<String>>,
    #[serde(rename = "decoded", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub decoded: Option<Option<String>>,
}

impl CryptoViewModel {
    pub fn new() -> CryptoViewModel {
        CryptoViewModel {
            encoded: None,
            decoded: None,
        }
    }
}

